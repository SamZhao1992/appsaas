<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.mapper.RecordTecMapper">
  <resultMap id="BaseResultMap" type="com.app.entity.RecordTec">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="consumer_name" jdbcType="VARCHAR" property="consumerName" />
    <result column="consumer_id" jdbcType="VARCHAR" property="consumerId" />
    <result column="api_id" jdbcType="VARCHAR" property="apiId" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="is_delete" jdbcType="VARCHAR" property="isDelete" />
    <result column="is_active" jdbcType="VARCHAR" property="isActive" />
    <result column="key_access" jdbcType="VARCHAR" property="keyAccess" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, consumer_name, consumer_id, api_id, api_name, is_delete, is_active, key_access
  </sql>
  <select id="selectByExample" parameterType="com.app.entity.RecordTecExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from record_tec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record_tec
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record_tec
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.app.entity.RecordTecExample">
    delete from record_tec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.app.entity.RecordTec">
    insert into record_tec (id, consumer_name, consumer_id, 
      api_id, api_name, is_delete, 
      is_active, key_access)
    values (#{id,jdbcType=INTEGER}, #{consumerName,jdbcType=VARCHAR}, #{consumerId,jdbcType=VARCHAR}, 
      #{apiId,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, #{isDelete,jdbcType=VARCHAR}, 
      #{isActive,jdbcType=VARCHAR}, #{keyAccess,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.app.entity.RecordTec">
    insert into record_tec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consumerName != null">
        consumer_name,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="apiId != null">
        api_id,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="keyAccess != null">
        key_access,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="consumerName != null">
        #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=VARCHAR},
      </if>
      <if test="keyAccess != null">
        #{keyAccess,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.app.entity.RecordTecExample" resultType="java.lang.Long">
    select count(*) from record_tec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record_tec
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.consumerName != null">
        consumer_name = #{record.consumerName,jdbcType=VARCHAR},
      </if>
      <if test="record.consumerId != null">
        consumer_id = #{record.consumerId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiId != null">
        api_id = #{record.apiId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiName != null">
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=VARCHAR},
      </if>
      <if test="record.keyAccess != null">
        key_access = #{record.keyAccess,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record_tec
    set id = #{record.id,jdbcType=INTEGER},
      consumer_name = #{record.consumerName,jdbcType=VARCHAR},
      consumer_id = #{record.consumerId,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=VARCHAR},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      is_active = #{record.isActive,jdbcType=VARCHAR},
      key_access = #{record.keyAccess,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.entity.RecordTec">
    update record_tec
    <set>
      <if test="consumerName != null">
        consumer_name = #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=VARCHAR},
      </if>
      <if test="keyAccess != null">
        key_access = #{keyAccess,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.entity.RecordTec">
    update record_tec
    set consumer_name = #{consumerName,jdbcType=VARCHAR},
      consumer_id = #{consumerId,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=VARCHAR},
      api_name = #{apiName,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=VARCHAR},
      key_access = #{keyAccess,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>